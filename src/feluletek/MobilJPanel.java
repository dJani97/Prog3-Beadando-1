/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package feluletek;

import adatkezeles.AdatInput;
import adatkezeles.EmberFajlbolInput;
import adatkezeles.KutyuFajlbolInput;
import javax.swing.DefaultListModel;
import alaposztalyok.*;
import java.awt.List;
import java.net.URI;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author djani
 */
public class MobilJPanel extends javax.swing.JPanel {

    public static final String EMBER_FILE = "/adatok/emberek.txt";
    public static final String KUTYU_FILE = "/adatok/kutyuk.txt";
    DefaultListModel<Ember> emberekModel = new DefaultListModel<>();
    DefaultComboBoxModel<Kutyu> kutyukModel = new DefaultComboBoxModel<>();
    Random rand = new Random();
    
    
    // Feladat fájlból:
    private final int MAX_TELEFON_DB = 20; // kiválasztáskor max ennyi ember vásárol
    private final int HASZNALAT_SZAM =100; // ennyiszer fut le a használat
    private final int MAX_UZENETHOSSZ = 200;
    private final double SZAZALEK = 0.6; // ekkora eséllyel kapcsolódik az internethez
    private final int MAX_INTERNET_IDO = 200;
    private final double MOBIL_BILLENTYU_ERO = 0.5;
    private final double OKOS_TEL_BILLENTYU_ERO = 0.3;
    private final int FUGGOSEG_HATAR = 1000;
    private final int SEJT_HATAR = 200;

    /**
     * Creates new form MobilJPanel
     */
    public MobilJPanel() {
        this.setSize(MainFrame.MAGASSAG, MainFrame.SZELESSEG);
        initComponents();
        
        statikusBeallitas();
    }
    
    void statikusBeallitas(){
        Ember.fuggosegiHatar = FUGGOSEG_HATAR;
        Ember.sejtHatar = SEJT_HATAR;
        Mobiltelefon.billentyuEro = MOBIL_BILLENTYU_ERO;
        Okostelefon.billentyuEro = OKOS_TEL_BILLENTYU_ERO;
        Okostelefon.max_internet_ido = MAX_INTERNET_IDO;
    }
    
    void fixFajlbol() {
        try {
            URI utvonal = this.getClass().getResource(EMBER_FILE).toURI();
            System.out.println(utvonal);
            emberekModel = new EmberFajlbolInput(utvonal).adatModel();
            emberJList.setModel(emberekModel);
            
            utvonal = this.getClass().getResource(KUTYU_FILE).toURI();
            kutyukModel = new KutyuFajlbolInput(utvonal).adatModel();
            kutyuJComboBox.setModel(kutyukModel);
        } catch (Exception ex) {
            Logger.getLogger(MobilJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // printModels();
    }
    
    void printModels(){
        for(int i=0; i < emberekModel.size(); i++){
            System.out.println(emberekModel.get(i));
        }
        
        for(int i=0; i < kutyukModel.getSize(); i++){
            System.out.println(kutyukModel.getElementAt(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kutyuJComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        emberJList = new javax.swing.JList();
        hasznalatjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DiagnozisjLabel = new javax.swing.JLabel();
        rendezesjButton = new javax.swing.JButton();

        kutyuJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kutyuJComboBoxActionPerformed(evt);
            }
        });

        emberJList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emberJListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(emberJList);

        hasznalatjButton.setText("Használat");
        hasznalatjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasznalatjButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Emberek");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Telefonválaszték");

        DiagnozisjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DiagnozisjLabel.setText("Kérem válasszon egy személyt a diagnózishoz!");

        rendezesjButton.setText("Rendezés");
        rendezesjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rendezesjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DiagnozisjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(kutyuJComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hasznalatjButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rendezesjButton)))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(kutyuJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hasznalatjButton)
                            .addComponent(rendezesjButton)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(DiagnozisjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void kutyuJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kutyuJComboBoxActionPerformed
        
        Kutyu valasztottKutyu = (Kutyu) kutyuJComboBox.getSelectedItem();
        Ember randomEmber;
        
        for (int i = 0; i < rand.nextInt(MAX_TELEFON_DB); i++) {
            
            randomEmber = emberekModel.getElementAt(rand.nextInt(emberekModel.getSize()));
            
            randomEmber.kutyutVesz(valasztottKutyu.masolat());
            
        }
    }//GEN-LAST:event_kutyuJComboBoxActionPerformed

    private void emberJListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emberJListMouseClicked
        
        
        Ember valasztott = (Ember) emberJList.getSelectedValue();
        DiagnozisjLabel.setText(valasztott.diagnozis());
        
        /* Debug célokra:
        System.out.println(valasztott.getKutyuk());
        */
    }//GEN-LAST:event_emberJListMouseClicked

    private void hasznalatjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasznalatjButtonActionPerformed
        
        if(emberekModel.getSize() < 1){ return; }
        
        Ember randomEmber;
        Kutyu randomKutyu;
        int kutyuSzam;
        
        for (int i = 0; i < rand.nextInt(HASZNALAT_SZAM); i++) {
            randomEmber = emberekModel.getElementAt(rand.nextInt(emberekModel.getSize()));
            kutyuSzam = randomEmber.getKutyuk().size();
            if(kutyuSzam > 0){
                randomKutyu = randomEmber.getKutyuk().get(rand.nextInt(kutyuSzam));
                randomKutyu.uzenetetKuld(rand.nextInt(MAX_UZENETHOSSZ));
                if(randomKutyu instanceof Okostelefon){
                    if(rand.nextDouble() > SZAZALEK){
                        ((Okostelefon) randomKutyu).kapcsolodik();
                    } else {
                        ((Okostelefon) randomKutyu).lekapcsolodik();
                    }
                    ((Okostelefon) randomKutyu).internetezik(rand.nextInt(MAX_INTERNET_IDO));
                }
            }
        }
        
        emberJList.updateUI();
    }//GEN-LAST:event_hasznalatjButtonActionPerformed

    private void rendezesjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rendezesjButtonActionPerformed
        
        Rendezo.setNovekvo(false);
        
        ArrayList<Ember> emberekLista = Collections.list(emberekModel.elements());
        
        emberekLista.sort(new Rendezo());
        
        emberekModel.clear();
        for (Ember ember : emberekLista) {
            emberekModel.addElement(ember);
        }
        
        Ember.setKiegeszitoAdat(Ember.KiegeszitoAdat.HUVELYKUJJ_ERO);
        emberJList.updateUI();
    }//GEN-LAST:event_rendezesjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DiagnozisjLabel;
    private javax.swing.JList emberJList;
    private javax.swing.JButton hasznalatjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox kutyuJComboBox;
    private javax.swing.JButton rendezesjButton;
    // End of variables declaration//GEN-END:variables
}
